<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Scheme.Environment">
<Super>%RegisteredObject</Super>
<TimeCreated>64008,57544.930776</TimeCreated>

<Property name="outer">
<Type>Scheme.Environment</Type>
</Property>

<Property name="data">
<Type>%Object</Type>
</Property>

<Method name="%OnNew">
<FormalSpec><![CDATA[parms:%String="",&args,outer:Scheme.Environment=""]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..data = {}
	for i=1:1:$ListLength(parms) {
		do ..data.$set($List(parms, i), args(i))
	}
	set ..outer = outer
	quit $$$OK
]]></Implementation>
</Method>

<Method name="find">
<FormalSpec>var</FormalSpec>
<ReturnType>Environment</ReturnType>
<Implementation><![CDATA[
	if ..data.$isDefined(var) {
		return $this
	}else {
		return ..outer.find(var)
	}
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec>x</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	return ..data.$get(x)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec>var,val</FormalSpec>
<Implementation><![CDATA[	do ..data.$set(var, val)
]]></Implementation>
</Method>

<Method name="standard">
<ClassMethod>1</ClassMethod>
<ReturnType>Scheme.Environment</ReturnType>
<Implementation><![CDATA[
	set res = ..%New()
	
	for op="+","-","*","/",">","<",">=","<=","=","**" {
		do res.put(op, "(x,y) return x "_op_" y")
	}
	do res.put("abs","(x) return $zabs(x)")
	do res.put("pi", $zpi)
	do res.put("begin","(x...) return x(x)") //return last expression
	return res
]]></Implementation>
</Method>
</Class>
</Export>
